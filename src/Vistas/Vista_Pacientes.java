/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controladores.OSocialJpaController;
import Controladores.PacienteJpaController;
import Entidades.OSocial;
import Entidades.Paciente;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Agustin
 */
public class Vista_Pacientes extends javax.swing.JFrame {

    OSocialJpaController oSocial = new OSocialJpaController(); 
    PacienteJpaController cPac = new PacienteJpaController();
    DefaultTableModel modelo;
    /**
     * Creates new form Vista_Pacientes
     */
    public Vista_Pacientes() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        CrearModelo2();
        cargar_Informacion();
        btnSeleccionar.setEnabled(true);
        btnBorrar.setEnabled(true);
        Tabla_Paciente.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("Hospital_zunda_2.0PU").createEntityManager();
        oSocialQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT o FROM OSocial o");
        oSocialList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : oSocialQuery.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Paciente = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDomicilio = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtLocalidad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDepartamento = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtPais = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtHc = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnSeleccionar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JToggleButton();
        btnModificar = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tabla_Paciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(Tabla_Paciente);

        jLabel1.setText("HOSPITAL ZUNDA - PACIENTES");

        jLabel2.setText("Nombre y Apellido: ");

        jLabel3.setText("D.N.I. :");

        jLabel6.setText("Telefono: ");

        jLabel7.setText("Correo Electronico: ");

        jLabel8.setText("Domicilio:");

        jLabel9.setText("Localidad: ");

        jLabel10.setText("Departamento: ");

        jLabel11.setText("Pais: ");

        btnGuardar.setText("Guardar ");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel5.setText("Historia Clinica:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnModificar.setText("Actualizar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(25, 25, 25)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                        .addComponent(txtLocalidad)))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtHc)
                                        .addComponent(txtPais, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDni)
                            .addComponent(txtTelefono)
                            .addComponent(txtDomicilio)
                            .addComponent(txtDepartamento, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    guardar_Paciente();
       
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        int dni = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el DNI del Paciente a Buscar:"));
        cargar_Informacion_Busqueda(dni);
        btnSeleccionar.setEnabled(true);
        Tabla_Paciente.setEnabled(true);
        btnBorrar.setEnabled(true);
        btnBuscar.setEnabled(true);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        int opc=0;
        try{
            opc = Integer.parseInt(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),0).toString());
            if(opc >= 0)
            {
                cargar_Campos();  
            }
        }catch(Exception e)
        {
            if(opc == -1)
            {    
                borrarCampos();
                cargar_Informacion();
            }
           JOptionPane.showMessageDialog(null, "No se a seleccionado ningun Paciente, intente nuevamente.  " + e.getMessage());  
        }
          
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        try{
            int id=0;
            id = Integer.parseInt(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),0).toString());
            System.out.println(""+id);
            JOptionPane.showMessageDialog(null, "Se borrara el registro seleccionado");
            int valor = JOptionPane.showConfirmDialog(null, "Desea continuar?");
            if(valor == JOptionPane.YES_OPTION)
            {
                cPac.destroy(id);
                JOptionPane.showMessageDialog(null, "Paciente Borrado");
                borrarCampos();
                cargar_Informacion();
            }
            else
            {
                 borrarCampos();
                 cargar_Informacion();
            }
           
        }catch(Exception e)
        {
            e.printStackTrace();
          JOptionPane.showMessageDialog(null,"No se selecciono ningun Paciente o se produjo un error de sistemas  " +  e.getMessage());
        }
            
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        actualizar_Paciente();
    }//GEN-LAST:event_btnModificarActionPerformed
    public void borrarCampos()
    {
            txtHc.setText("");
            txtNombre.setText("");
            txtDni.setText("");
            txtTelefono.setText("");
            txtEmail.setText("");
            txtDomicilio.setText("");
            txtLocalidad.setText("");
            txtDepartamento.setText("");
            txtPais.setText("");
            btnSeleccionar.setEnabled(true);
            btnBorrar.setEnabled(true);
            btnBuscar.setEnabled(true);
            Tabla_Paciente.setEnabled(false);
    }
    public void cargar_Campos()
    {
            txtHc.setText(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),1).toString());
            txtNombre.setText(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),2).toString());
            txtDni.setText(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),4).toString());
            txtTelefono.setText(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),5).toString());
            txtEmail.setText(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),6).toString());
            txtDomicilio.setText(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),7).toString());
            txtLocalidad.setText(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),8).toString());
            txtDepartamento.setText(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),9).toString());
            txtPais.setText(Tabla_Paciente.getValueAt(Tabla_Paciente.getSelectedRow(),10).toString());
    }

     private void CrearModelo2()
     {
         String cabecera[] = {"idPaciente","hc", "nombre","tipoDni", "dni", "telefono", "Email", "Domicilio", "localidad", "departamento","pais"};
         String datos[][] = {};
         modelo = new DefaultTableModel(datos, cabecera); 
         Tabla_Paciente.setModel(modelo);
     }  
    public void cargar_Informacion()
    {
        try{
            Limpiat_Tabla();
            Object o[]=null;
            List<Paciente> listP = cPac.findPacienteEntities();
            
            for(int i=0 ;i<listP.size() ; i++)
            {
                
                
                modelo.addRow(o);
                modelo.setValueAt(listP.get(i).getIdPaciente(), i, 0);
                modelo.setValueAt(listP.get(i).getHc(), i, 1);
                modelo.setValueAt(listP.get(i).getNombre(), i, 2);
                modelo.setValueAt(listP.get(i).getTipoDni(), i, 3);
                modelo.setValueAt(listP.get(i).getDni(), i, 4);
                modelo.setValueAt(listP.get(i).getTelefono(), i, 5);
                modelo.setValueAt(listP.get(i).getEmail(), i, 6);
                modelo.setValueAt(listP.get(i).getDomicilio(), i, 7);
                modelo.setValueAt(listP.get(i).getLocalidad(), i, 8);
                modelo.setValueAt(listP.get(i).getDepartamento(), i, 9);
                modelo.setValueAt(listP.get(i).getPais(), i, 10);
            }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString() + "error2");
        }
    }
    private void Limpiat_Tabla()
    {
        for (int i = 0; i < modelo.getRowCount(); i++)
        {
            modelo.removeRow(i);
            i-=1;
        }
    }
    public void cargar_Informacion_Busqueda(int aux)
    {

        try{
            Limpiat_Tabla();
            Object o[]=null;
            List<Paciente> listP = cPac.findPAcienteByDni(aux);
            
            for(int i=0 ;i<listP.size() ; i++)
            {
                modelo.addRow(o);
                modelo.setValueAt(listP.get(i).getIdPaciente(), i, 0);
                modelo.setValueAt(listP.get(i).getHc(), i, 1);
                modelo.setValueAt(listP.get(i).getNombre(), i, 2);
                modelo.setValueAt(listP.get(i).getTipoDni(), i, 3);
                modelo.setValueAt(listP.get(i).getDni(), i, 4);
                modelo.setValueAt(listP.get(i).getTelefono(), i, 5);
                modelo.setValueAt(listP.get(i).getEmail(), i, 6);
                modelo.setValueAt(listP.get(i).getDomicilio(), i, 7);
                modelo.setValueAt(listP.get(i).getLocalidad(), i, 8);
                modelo.setValueAt(listP.get(i).getDepartamento(), i, 9);
                modelo.setValueAt(listP.get(i).getPais(), i, 10);   
            }
            if(listP.size()==0)
            {
                JOptionPane.showMessageDialog(null, "No se encontro ningun resultado o los datos de busqueda no son correctos... intente nuevamente: ");
                borrarCampos();
                cargar_Informacion();
            }
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "No se encontro ningun resultado o los datos de busqueda no son correctos... intente nuevamente: " + e.getMessage());
            borrarCampos();
            cargar_Informacion();
        }
    }
    public void guardar_Paciente()
    {
        try{
            Paciente p = new Paciente();
            p.setHc(Integer.parseInt(txtHc.getText()));
            p.setNombre(txtNombre.getText());
            p.setTipoDni("DNI");
            p.setDni(Integer.parseInt(txtDni.getText()));
            p.setTelefono(txtTelefono.getText());
            p.setEmail(txtEmail.getText());
            p.setDomicilio(txtDomicilio.getText());
            p.setLocalidad(txtLocalidad.getText());
            p.setDepartamento(txtDepartamento.getText());
            p.setPais(txtPais.getText());
        
            cPac.create(p);
            JOptionPane.showMessageDialog(null, "El paciente se registro correctamente.");
            borrarCampos();
            cargar_Informacion();
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    public void actualizar_Paciente()
    {
        try{
            Paciente p = new Paciente();
            p.setHc(Integer.parseInt(txtHc.getText()));
            p.setNombre(txtNombre.getText());
            p.setTipoDni("DNI");
            p.setDni(Integer.parseInt(txtDni.getText()));
            p.setTelefono(txtTelefono.getText());
            p.setEmail(txtEmail.getText());
            p.setDomicilio(txtDomicilio.getText());
            p.setLocalidad(txtLocalidad.getText());
            p.setDepartamento(txtDepartamento.getText());
            p.setPais(txtPais.getText());
        
            cPac.edit(p);
            JOptionPane.showMessageDialog(null, "El paciente se actualizo correctamente.");
            borrarCampos();
            cargar_Informacion();
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"No se a seleccionado ningun Paciente. " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla_Paciente;
    private javax.swing.JToggleButton btnBorrar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSeleccionar;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private java.util.List<Entidades.OSocial> oSocialList;
    private javax.persistence.Query oSocialQuery;
    private javax.swing.JTextField txtDepartamento;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtDomicilio;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHc;
    private javax.swing.JTextField txtLocalidad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPais;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
